[gd_resource type="VisualShader" load_steps=13 format=2]

[ext_resource path="res://MOD_CONTENT/CruS Online/maps/greyface1.png" type="Texture" id=1]
[ext_resource path="res://MOD_CONTENT/CruS Online/maps/greyface2.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeScalarConstant" id=2758]
constant = 0.05

[sub_resource type="VisualShaderNodeInput" id=2759]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=2760]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 5, 5, 5 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=2761]
uniform_name = "UV_Scale"
default_value_enabled = true
default_value = Vector3( 1, 1, 1 )

[sub_resource type="VisualShaderNodeTexture" id=2749]
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id=2750]
output_port_for_preview = 1
texture = ExtResource( 2 )
texture_type = 1

[sub_resource type="VisualShaderNodeVectorScalarMix" id=2751]

[sub_resource type="VisualShaderNodeVectorOp" id=2752]

[sub_resource type="VisualShaderNodeInput" id=2753]
input_name = "view"

[sub_resource type="VisualShaderNodeVectorOp" id=2755]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.025, 0.025, 0.025 ) ]
operator = 2

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform vec3 UV_Scale = vec3(1.000000, 1.000000, 1.000000);
uniform sampler2D tex_frg_2 : hint_albedo;
uniform sampler2D tex_frg_4 : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:17
	vec3 n_out17p0 = vec3(UV, 0.0);

// VectorUniform:19
	vec3 n_out19p0 = UV_Scale;

// VectorOp:18
	vec3 n_out18p0 = n_out17p0 * n_out19p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out18p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Input:7
	vec3 n_out7p0 = VIEW;

// Scalar:16
	float n_out16p0 = 0.050000;

// VectorOp:9
	vec3 n_out9p0 = n_out7p0 * vec3(n_out16p0);

// VectorOp:6
	vec3 n_out6p0 = n_out18p0 + n_out9p0;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out6p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// VectorScalarMix:5
	vec3 n_out5p0 = mix(n_out2p0, n_out4p0, n_out4p1);

// Output:0
	ALBEDO = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -957.276, 28.5196 )
nodes/fragment/0/position = Vector2( 240, 120 )
nodes/fragment/2/node = SubResource( 2749 )
nodes/fragment/2/position = Vector2( -180, 120 )
nodes/fragment/4/node = SubResource( 2750 )
nodes/fragment/4/position = Vector2( -180, 380 )
nodes/fragment/5/node = SubResource( 2751 )
nodes/fragment/5/position = Vector2( 20, 280 )
nodes/fragment/6/node = SubResource( 2752 )
nodes/fragment/6/position = Vector2( -360, 480 )
nodes/fragment/7/node = SubResource( 2753 )
nodes/fragment/7/position = Vector2( -720, 500 )
nodes/fragment/9/node = SubResource( 2755 )
nodes/fragment/9/position = Vector2( -540, 560 )
nodes/fragment/16/node = SubResource( 2758 )
nodes/fragment/16/position = Vector2( -740, 660 )
nodes/fragment/17/node = SubResource( 2759 )
nodes/fragment/17/position = Vector2( -520, 180 )
nodes/fragment/18/node = SubResource( 2760 )
nodes/fragment/18/position = Vector2( -540, 260 )
nodes/fragment/19/node = SubResource( 2761 )
nodes/fragment/19/position = Vector2( -960, 180 )
nodes/fragment/connections = PoolIntArray( 4, 1, 5, 2, 2, 0, 5, 0, 4, 0, 5, 1, 5, 0, 0, 0, 7, 0, 9, 0, 6, 0, 4, 0, 9, 0, 6, 1, 16, 0, 9, 1, 18, 0, 2, 0, 18, 0, 6, 0, 17, 0, 18, 0, 19, 0, 18, 1 )
